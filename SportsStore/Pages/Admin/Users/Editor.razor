@page "/admin/users/edit/{id:long}"
@page "/admin/users/create"
@inherits OwningComponentBase<ICustomerRepository>
<style>
	div.validation-message {
		color: rgb(220, 53, 69);
		font-weight: 500
	}
</style>
<h3 class="bg-@ThemeColor text-white text-center p-1">Редактировать пользователя</h3>
<EditForm Model="Customer" OnValidSubmit="SaveCustomer">
	<DataAnnotationsValidator />
	@if (Customer.CustomerID != 0)
	{
		<div class="form-group">
			<label>ID</label>
			<input class="form-control" disabled value="@Customer.CustomerID" />
		</div>
	}
	<div class="form-group">
		<label>Имя</label>
		<ValidationMessage For="@(() => Customer.Name)" />
		<InputText class="form-control" @bind-Value="Customer.Name" />
	</div>
	<div class="form-group">
		<label>Пароль</label>
		<ValidationMessage For="@(() => Customer.Password)" />
		<InputText class="form-control" @bind-Value="Customer.Password" />
	</div>
	<div class="form-group">
		<label>Логин</label>
		<ValidationMessage For="@(() => Customer.Login)" />
		<InputText class="form-control" @bind-Value="Customer.Login" />
	</div>
	<div class="form-group">
		<label>Статус</label>
		<ValidationMessage For="@(() => Customer.Status)" />
		<InputNumber class="form-control" @bind-Value="Customer.Status" />
	</div>
	<div class="form-group">
		<label>Страна</label>
		<ValidationMessage For="@(() => Customer.Country)" />
		<InputNumber class="form-control" @bind-Value="Customer.Country" />
	</div>
	<div class="form-group">
		<label>Регион/штат/область</label>
		<ValidationMessage For="@(() => Customer.State)" />
		<InputNumber class="form-control" @bind-Value="Customer.State" />
	</div>
	<div class="form-group">
		<label>Город</label>
		<ValidationMessage For="@(() => Customer.City)" />
		<InputNumber class="form-control" @bind-Value="Customer.City" />
	</div>
	<div class="form-group">
		<label>Мобильный телефон</label>
		<ValidationMessage For="@(() => Customer.Mobile)" />
		<InputNumber class="form-control" @bind-Value="Customer.Mobile" />
	</div>
	<div class="form-group">
		<label>e-mail</label>
		<ValidationMessage For="@(() => Customer.Email)" />
		<InputNumber class="form-control" @bind-Value="Customer.Email" />
	</div>
	<div class="form-group">
		<label>Дата регистрации</label>
		<ValidationMessage For="@(() => Customer.RegisterDate)" />
		<InputNumber class="form-control" @bind-Value="Customer.RegisterDate" />
	</div>
	<div class="mt-2">
		<button type="submit" class="btn btn-@ThemeColor">Сохранить</button>
		<NavLink class="btn btn-secondary" href="/admin/customer">Отменить</NavLink>
	</div>
</EditForm>
@code {
	public ICustomerRepository Repository => Service;
	[Inject]
	public NavigationManager? NavManager { get; set; }
	[Parameter]
	public long Id { get; set; } = 0;
	public Customer Customer { get; set; } = new Customer();
	protected override void OnParametersSet()
	{
		if (Id != 0)
		{
			Customer = Repository.Customers.FirstOrDefault(p => p.CustomerID == Id)
			?? new();
		}
	}
	public void SaveCustomer()
	{
		if (Id == 0)
		{
			Repository.CreateCustomer(Customer);
		}
		else
		{
			Repository.SaveCustomer(Customer);
		}
		NavManager?.NavigateTo("/admin/customer");
	}
	public string ThemeColor => Id == 0 ? "primary" : "warning";
	public string TitleText => Id == 0 ? "Create" : "Edit";
}